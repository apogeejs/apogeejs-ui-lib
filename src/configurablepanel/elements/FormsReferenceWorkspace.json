{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":1,"lists":{"es module":{"treeState":0},"js link":{"treeState":0},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"FormsReference","children":{"main":{"name":"main","type":"apogee.Folder","children":{"formElements":{"name":"formElements","type":"apogee.Folder","children":{"checkbox":{"name":"checkbox","type":"apogee.Folder","children":{"checkboxInDesigner":{"name":"checkboxInDesigner","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicCheckbox","value":{"uniqueKey":"basicCheckbox","type":"checkbox","label":"My Checkbox: ","value":true,"entriesType":"value","hint":"This is a checkbox","help":"The value of the checkbox is true if checked and false if not checked.","useSelector":"none","key":"myCheckbox"}}]}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicCheckbox","value":{"uniqueKey":"basicCheckbox","type":"checkbox","label":"My Checkbox: ","value":true,"entriesType":"value","hint":"This is a checkbox","help":"The value of the checkbox is true if checked and false if not checked.","useSelector":"none","key":"myCheckbox"}}]},"contextParentGeneration":2}},"data":{"name":"data","type":"apogee.DesignerDataFormMember"},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":{"myCheckbox":true}}}}},"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"input":{"name":"input","type":"apogee.JsonMember","updateData":{"data":""}},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":{"myCheckbox":true}}}}}}},"panel":{"name":"panel","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Parent Form\"\n    },\n    {\n        type: \"panel\", //REQUIRED\n        formData: [ //REQUIRED\n            {\n                type: \"heading\",\n                level: 2,\n                text: \"This is a Form inside a Form.\"\n            },\n            {\n                type: \"textField\",\n                label: \"Name: \",\n                key: \"name\"\n            },\n            {\n                type: \"checkbox\",\n                label: \"Hungry: \",\n                key: \"hungry\" //its almost lunch time\n            } \n        ],\n        key: \"myPanel\" //REQUIRED\n        \n        //NOTE - the following standard elements are not available here\n        //hint: \"This is a panel\", //NOT AVAILABLE!\n        //help: \"The value of the panel...\", //NOT AVAILABLE\n    },\n    {\n        type: \"checkbox\",\n        label: \"Gratuitious element: \",\n        key: \"gratuitous\"\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"myPanel":{"name":"Dave","hungry":true},"gratuitous":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"list":{"name":"list","type":"apogee.Folder","children":{"multiElementList":{"name":"multiElementList","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Stuff I Have\"\n    },\n    {\n        type: \"list\", //REQUIRED\n        label: \"Stuff: \", //OPTIONAL\n        entryTypes: [ //REQUIRED. Notice how this is \"entryTypes\" instead of \"entryType\" as in the single element list. Here we inlcude one or more elements that can be added to the list.\n            {\n                label: \"Car\", //OPTIONAL (but highly recommended), this is the text that goes on the \"add\" button!\n                layout: { //REQUIRED\n                    type: \"panel\",\n                    formData: [ \n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Make: \",\n                            entries: [\"Honda\",\"BMW\",\"Other\"],\n                            key: \"make\"\n                        },\n                        {\n                            type: \"textField\",\n                            label: \"Model: \",\n                            key: \"model\"\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Year: \",\n                            entries: [2015,1997,\"Other\"],\n                            key: \"year\"\n                        }\n                    ],\n                    key: \"carEntry\" //REQUIRED - this is used to identify the object type\n                }\n            },\n            {\n                label: \"Pet\",\n                layout: {\n                    type: \"panel\",\n                    formData: [\n                        {\n                            type: \"textField\",\n                            label: \"Name: \",\n                            key: \"name\",\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Type: \",\n                            entries: [\"Dog\",\"Cat\",\"Emu\"],\n                            key: \"type\"\n                        }\n                    ],\n                    key: \"petEntry\"\n                }\n            }\n        ],\n        key: \"stuff\", //REQUIRED\n        hint: \"This is a list\",\n        help: \"The letes you add a number of entries\",\n    },\n    {\n        type: \"checkbox\",\n        label: \"Gratuitious element: \",\n        key: \"gratuitous\"\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"stuff":[{"key":"carEntry","value":{"make":"Other","model":"CX-5","year":"Other"}},{"key":"petEntry","value":{"name":"Fido","type":"Dog"}},{"key":"petEntry","value":{"name":"George","type":"Emu"}}],"gratuitous":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"singleElementList":{"name":"singleElementList","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Parent Form\"\n    },\n    {\n        type: \"list\", //REQUIRED\n        label: \"Names: \", //OPTIONAL\n        entryType: { //REQUIRED\n            label: \"Name\", //OPTIONAL this is the text that goes on the \"add\" button!\n            layout: { //REQUIRED this is the layout of each element in the list. It must be a single element. It often will be a \"panel\" to allow multiple child elements\n                type: \"textField\",\n                key: \"nameEntry\" //This top level key is not actually used on the single-element list type, but it is on the mutli-element list type.\n            }\n        },\n        key: \"names\", //REQUIRED\n\n        hint: \"This is a list\",\n        help: \"The letes you add a number of entries\",\n    },\n    {\n        type: \"checkbox\",\n        label: \"Gratuitious element: \",\n        key: \"gratuitous\"\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"names":["John","Jacob","Jingleheimer","Smith"],"gratuitous":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"multiElementList2":{"name":"multiElementList2","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Stuff I Have\"\n    },\n    {\n        type: \"list\", //REQUIRED\n        label: \"Stuff: \", //OPTIONAL\n        entryTypes: [ //REQUIRED. Notice how this is \"entryTypes\" instead of \"entryType\" as in the single element list. Here we inlcude one or more elements that can be added to the list.\n            {\n                label: \"Car\", //OPTIONAL (but highly recommended), this is the text that goes on the \"add\" button!\n                layout: { //REQUIRED\n                    type: \"panel\",\n                    formData: [ \n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Make: \",\n                            entries: [\"Honda\",\"BMW\",\"Other\"],\n                            key: \"make\"\n                        },\n                        {\n                            type: \"textField\",\n                            label: \"Model: \",\n                            key: \"model\"\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Year: \",\n                            entries: [2015,1997,\"Other\"],\n                            key: \"year\"\n                        }\n                    ],\n                    key: \"carEntry\" //REQUIRED - this is used to identify the object type\n                }\n            },\n            {\n                label: \"Pet\",\n                layout: {\n                    type: \"panel\",\n                    formData: [\n                        {\n                            type: \"textField\",\n                            label: \"Name: \",\n                            key: \"name\",\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Type: \",\n                            entries: [\"Dog\",\"Cat\",\"Emu\"],\n                            key: \"type\"\n                        }\n                    ],\n                    key: \"petEntry\"\n                }\n            },\n            {\n                label: \"Computer\",\n                layout: {\n                    type: \"panel\",\n                    formData: [\n                        {\n                            type: \"textField\",\n                            label: \"Model: \",\n                            key: \"model\",\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Type: \",\n                            entries: [\"Dell\",\"Lenovo\",\"Vax\"],\n                            key: \"type\"\n                        }\n                    ],\n                    key: \"computerEntry\"\n                }\n            },\n            {\n                label: \"Phone\",\n                layout: {\n                    type: \"panel\",\n                    formData: [\n                        {\n                            type: \"textField\",\n                            label: \"Model: \",\n                            key: \"model\",\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Type: \",\n                            entries: [\"Apple\",\"Android\",\"Other\"],\n                            key: \"type\"\n                        }\n                    ],\n                    key: \"phoneEntry\"\n                }\n            },\n            {\n                label: \"Kids\",\n                layout: {\n                    type: \"panel\",\n                    formData: [\n                        {\n                            type: \"dropdown\",\n                            label: \"Name: \",\n                            entries: [\"Tyler\",\"Skyler\",\"Other\"],\n                            key: \"name\",\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Type: \",\n                            entries: [\"Male\",\"Female\",\"Other\"],\n                            key: \"gender\"\n                        }\n                    ],\n                    key: \"offspringEntry\"\n                }\n            },\n        ],\n        key: \"stuff\", //REQUIRED\n        maxButtonCount: 3, //optional. Three is actually the default value\n        addButtonLabel: \"Possesion\", //optional, this is used only if the buttons are replaced with a dropdown\n        hint: \"This is a list\",\n        help: \"The letes you add a number of entries\",\n    },\n    {\n        type: \"checkbox\",\n        label: \"Gratuitious element: \",\n        key: \"gratuitous\"\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"stuff":[{"key":"carEntry","value":{"make":"Other","model":"CX-5","year":"Other"}},{"key":"petEntry","value":{"name":"Fido","type":"Dog"}},{"key":"petEntry","value":{"name":"George","type":"Emu"}},{"key":"offspringEntry","value":{"name":"Skyler","gender":"Male"}}],"gratuitous":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"colorPicker":{"name":"colorPicker","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"colorPicker\", //REQUIRED\n\t\tlabel: \"Border Color: \", //OPTIONAL\n\t\tkey: \"borderColor\", //REQUIRED\n\t\tvalue: \"#0000ff\", //OPTIONAL This is the initial value. In this case it is overwridden with the saved value.\n\t\thint: \"pick a color\", //OPTIONAL\n        help: \"This element allows you to select a color.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"borderColor":"#54bb5a"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"dropdown":{"name":"dropdown","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"dropdown\", //REQUIRED\n\t\tlabel: \"Age: \", //OPTIONAL\n\t\tentries: [23,42,19,\"Other\"], //REQUIRED\n\t\t//entries: [[\"Twenty Three\",23],[\"Forty Two\",42],[\"Nineteen\",19],\"Other\"], //Alternate method for entering entries, [Display Data,Associated Form Value]\n\t\tvalue: 19, //OPTIONAL - This is the initial value, which in this case can be overridden by saved data.\n\t\tkey: \"age\", //REQUIRED\n\t\thint: \"age in years\", //OPTIONAL\n        help: \"This element allows you to select an age.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"age":23}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"heading":{"name":"heading","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"heading\", //REQUIRED\n\t\ttext: \"This is a heading!\", //REQUIRED\n\t\tlevel: 1, //OPTIONAL this is a value from 1 to 6. The default value is 2.\n\t\t\n\t\t//The value and key are not applicable since this is a non-interactive element.\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"htmlDisplay":{"name":"htmlDisplay","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"htmlDisplay\", //REQUIRED\n\t\thtml: \"<div style='border: 2px solid red; background-color: lightblue'>This is <b>html</b>.<br>This element is not <span style='color: orange'>interactive</span>.<br>It is only for <em>display</em></div>\",\n\t\n        //The standard elements key and value are not applicable since this is not an interactive element\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"myCheckbox":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"invisible":{"name":"invisible","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"checkbox\",\n        label: \"Gratuitous Element : \",\n        value: true,\n        key: \"gratuitous\",\n        hint: \"This is not the invisible element!\"\n    },\n    {\n\t\ttype: \"invisible\", //REQUIRED\n\t\tvalue: 37, //REQUIRED\n\t\tkey: \"invisibleValue\" //REQUIRED \n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"gratuitous":true,"invisibleValue":37}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"radioButtonGroup":{"name":"radioButtonGroup","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"radioButtonGroup\", //REQUIRED\n\t\tlabel: \"Age: \", //OPTIONAL\n\t\thorizontal: true, //OPTIONAL - this indicates if the radio buttons should be arraned horizontally or vertically.\n\t\tentries: [23,42,19,\"Other\"], //REQUIRED\n\t\t//entries: [[\"Twenty Three\",23],[\"Forty Two\",42],[\"Nineteen\",19],\"Other\"], //Alternate method for entering entries, [Display Data,Associated Element Value]\n\t\tvalue: 19, //OPTIONAL - This is the initial value, which in this case can be overridden by saved data.\n\t\tkey: \"age\", //REQUIRED\n\t\thint: \"pick your age\", //OPTIONAL\n        help: \"This element allows you to select your age.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"age":42}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"sliderElement":{"name":"sliderElement","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"slider\", //REQUIRED\n\t\tlabel: \"Satisfaction: \", //OPTIONAL\n\t\tmin: 0, //OPTIONAL\n\t\tmax: 10, //OPTIONAL\n\t\tstep: .1, //OPTIONAL\n\t\tkey: \"satisfaction\", //REQUIRED\n\t\tvalue: 10, //OPTIONAL - this is the initial value, whcih can be overwritten in the saved data, as is done here.\n\t\thint: \"in furlongs per fortnight\", //OPTIONAL\n        help: \"This element allows you to select your satisfaction with the status quo.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"satisfaction":6.2}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"spacerElement":{"name":"spacerElement","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Ready: \",\n\t\tkey: \"check1\"\n\t},\n\t{\n\t\ttype: \"spacer\", //REQUIRED\n\t\theight: 30 //OPTIONAL, vertical space in pixels, defaults to 15\n\t},\n\t{\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Are you sure? \",\n\t\tkey: \"check2\"\n\t}\n    \n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"check1":true,"check2":false}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"textField":{"name":"textField","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"textField\", //REQUIRED\n\t\tlabel: \"Favorite Color: \", //OPTIONAL\n\t\tsize: 50, //OPTIONAL\n\t\tvalue: \"blue\", //OPTIONAL - This is the initial value. It may be overridden by saved data, as it is here.\n\t\tkey: \"favColor\" //REQUIRED\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"favColor":"red"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"checkboxGroup":{"name":"checkboxGroup","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"checkboxGroup\", //REQUIRED\n\t\tlabel: \"Aching Joints: \", //OPTIONAL\n\t\thorizontal: true, //OPTIONAL - this indicates if the radio buttons should be arraned horizontally or vertically.\n\t\t//entries: [\"knee\",\"elbow\",\"wrist\",\"neck\"], //REQUIRED\n\t\tentries: [[\"Knee\",\"knee\"],[\"Elbow\",\"elbow\"],[\"Wrist\",\"wrist\"],[\"Neck\",\"neck\"]], //Alternate method for entering entries, [Display Data,Associated Element Value]\n\t\tvalue: [\"elbow\",\"wrist\"], //OPTIONAL - This is the initial value, which in this case can be overridden by saved data.\n\t\tkey: \"achingJoints\", //REQUIRED\n\t\thint: \"Joints that ache\", //OPTIONAL\n        help: \"This element allows you to select your joints that ache.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"achingJoints":["elbow","wrist"]}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"textarea":{"name":"textarea","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"textarea\", //REQUIRED\n\t\tlabel: \"Intro: \", //OPTIONAL\n\t\trows: 15, //OPTIONAL\n\t\tcols: 100, //OPTIONAL\n\t\tkey: \"intro\", //REQUIRED\n\t\tvalue: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\", //OPTIONAL, this is the initial value. It can be overridden, as it is here by saved data.\n\t\thint: \"text\", //OPTIONAL\n        help: \"This will be used as the initial crawl in your movie.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"intro":"Four score and seven years ago our fathers brought forth on this continent a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.\n\nNow we are engaged in a great civil war, testing whether that nation or any nation so conceived and so dedicated, can long endure. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire.\n\nDuring the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.\n\nPursued by the Empire's sinister agents, Princess Leia races home aboard her starship, custodian of the stolen plans that can save her people and restore freedom to the galaxy."}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}}}},"formLayouts":{"name":"formLayouts","type":"apogee.Folder","children":{"showHideLayout":{"name":"showHideLayout","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Parent Form\"\n    },\n    {\n        type: \"textField\",\n        label: \"Name: \",\n        key: \"name\"\n    },\n    {\n\t\ttype: \"showHideLayout\", //REQUIRED\n\t\theading: \"Advanced\", //OPTIONAL\n\t\t//level: 4, //OPTIONAL\n\t\tclosed: true, //OPTIONAL - This gives the initial state\n\t\tformData: [ //REQUIRED - These are elements in the layout. They still appead as children in the parent form.\n\t\t    {\n\t\t        type: \"textField\",\n\t\t        label: \"Phone: \",\n\t\t        key: \"phone\"\n\t\t    },\n\t\t    {\n\t\t        type: \"textField\",\n\t\t        label: \"Suitor: \",\n\t\t        key: \"suitor\"\n\t\t    }\n\t\t]\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"name":"Jenny","phone":"867-5309","suitor":"Tommy Tutone"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"horizontalLayout":{"name":"horizontalLayout","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"textField\",\n        label: \"Name: \",\n        size: 40,\n        key: \"name\"\n    },\n    {\n        type: \"textField\",\n        label: \"Addess Line 1: \",\n        size: 100,\n        key: \"addess1\"\n    },\n    {\n        type: \"textField\",\n        label: \"Addess Line 2: \",\n        size: 100,\n        key: \"address2\"\n    },\n    {\n\t\t\"type\": \"horizontalLayout\",\n\t\t\"formData\": [\n\t\t    {\n\t\t\t\ttype: \"textField\",\n\t\t\t\tlabel: \"City: \",\n\t\t\t\tsize: 30,\n\t\t\t\tkey: \"city\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"textField\",\n\t\t\t\tlabel: \"State: \",\n\t\t\t\tsize: 30,\n\t\t\t\tkey: \"state\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"textField\",\n\t\t\t\tlabel: \"Zipcode: \",\n\t\t\t\tsize: 10,\n\t\t\t\tkey: \"zip\"\n\t\t\t}\n\t\t]\n\t},\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}}}},"selectors":{"name":"selectors","type":"apogee.Folder","children":{"aSimpleSelection":{"name":"aSimpleSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Simple Selector Example\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\"],\n        key: \"petType\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\" //This is the value of the parent element where this element is visible\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Abyssinian\",\"American Bobtail\",\"American Curl\",\"Other\"],\n        key: \"catBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Cat\" //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"petType":"Dog","dogBreed":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"bMultiValueSelection":{"name":"bMultiValueSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Selector Multi-value Example \"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\",\"Cow\"],\n        key: \"petType\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValues: [\"Dog\",\"Cat\"] //Here we use \"parentValues\" with an s, and have an array.\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Holstein\",\"Braham\",\"Other\"],\n        key: \"catBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Cow\" //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"petType":"Cat","dogBreed":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"cMultiOptionSelection":{"name":"cMultiOptionSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [  \n    {\n        type: \"heading\",\n        text: \"Simple Selector with Multi-value Parent\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        //here we can select multiple values.\n        type: \"checkboxGroup\",\n        label: \"Pets: \",\n        entries: [\"Dog\",\"Cat\",\"Cow\"],\n        key: \"pets\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"checkbox\",\n        label: \"Verify if you are a dog person: \",\n        key: \"isDogPerson\",\n        selector: {\n            parentKey: \"pets\", //This is the key for the parent element\n            parentValue: \"Dog\" //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"pets":["Dog","Cat"],"isDogPerson":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"dMultiValueMultiOptionSelection":{"name":"dMultiValueMultiOptionSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [  \n    {\n        type: \"heading\",\n        text: \"Multi-value Selector with Multi-value Parent\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        //here we can select multiple values.\n        type: \"checkboxGroup\",\n        label: \"Pets: \",\n        entries: [\"Dog\",\"Cat\",\"Cow\"],\n        key: \"pets\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"checkbox\",\n        label: \"Verify you do have a dog and/or cat: \",\n        key: \"doesHaveDogAndOrCat\",\n        selector: {\n            parentKey: \"pets\", //This is the key for the parent element\n            parentValues: [\"Dog\",\"Cat\"] //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"pets":["Dog","Cow"],"doesHaveDogAndOrCat":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"eAbsoluteParentPath":{"name":"eAbsoluteParentPath","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Parent Panel\"\n    },\n    {\n        type: \"htmlDisplay\",\n        html: \"--- start of child panel ---\"\n    },\n    {\n        type: \"panel\",\n        formData: [\n            {\n                type: \"heading\",\n                text: \"Child Panel\"\n            },\n            {\n                type: \"checkbox\",\n                label: \"Show Other Element: \",\n                key: \"showElement\"\n            }\n        ],\n        key: \"childPanel\"\n    },\n    {\n        type: \"htmlDisplay\",\n        html: \"--- rest of parent panel ---\"\n    },\n    {\n        type: \"textField\",\n        label: \"Other Element: \",\n        key: \"otherElement\",\n        selector: {\n            parentKey: [\"childPanel\",\"showElement\"], //This selects an absolute path within the form, meaning \"showElement\" on \"childPanel\"\n            parentValue: true\n        }\n    }\n    \n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"childPanel":{"showElement":true},"otherElement":""}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"fOtherActions":{"name":"fOtherActions","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Different Selector Actions\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\"],\n        key: \"petType\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed Element #1: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed1\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\",\n            action: \"normalInvactive\" //Here we toggle between the states normal and inactive. This is the default action.\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed Element #2: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed3\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\",\n            action: \"normalHidden\" //Here we toggle between the states normal and hidden.\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed Element #3: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed4\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\",\n            action: \"normalDisabled\" //Here we toggle between the states normal and disabled\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"petType":"Dog","dogBreed1":"Mutt","dogBreed2":"Mutt","dogBreed3":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"gCustomAction":{"name":"gCustomAction","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Custom Action Example\"\n    },\n    {\n        type: \"checkbox\",\n        label: \"Has Pet\",\n        key: \"hasPet\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\"],\n        key: \"petType\",\n        selector: {\n            parentKey: \"hasPet\",\n            parentValue: true\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed1\",\n        selector: {\n            parentKey: \"petType\", //For custom actions, you can have a single parentKey, or multiple parentKeys.\n            actionFunction: (childElement,petTypeElement) => {\n                if((petTypeElement.getState() == \"normal\")&&(petTypeElement.getValue() == \"Dog\")) {\n                    childElement.setState(\"normal\");\n                }\n                else {\n                    childElement.setState(\"inactive\");\n                }\n            }\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed2\",\n        selector: {\n            parentKeys: [\"hasPet\",\"petType\"], //For custom actions, you can have a single parentKey, or multiple parentKeys.\n            actionFunction: (childElement,hasPetElement,petTypeElement) => {\n                if((hasPetElement.getValue() === true)&&(petTypeElement.getValue() == \"Dog\")) {\n                    childElement.setState(\"normal\");\n                }\n                else {\n                    childElement.setState(\"inactive\");\n                }\n            }\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"hasPet":true,"petType":"Dog","dogBreed1":"Mutt","dogBreed2":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"expressionForms":{"name":"expressionForms","type":"apogee.Folder","children":{"formFunctionBody1":{"name":"formFunctionBody1","type":"apogee.JsonMember","updateData":{"data":"let output = {};\noutput[\"referenceField\"] = dummy\noutput[\"textField\"] = \"dummy\"\nreturn output;"}},"formResult1":{"name":"formResult1","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"expressionField\"] = dummy\noutput[\"textField\"] = \"dummy\"\nreturn output;","supplementalCode":""}},"expressionForm1":{"name":"expressionForm1","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    let formMeta = formObject.getMeta();\n    let functionGenerator = new apogeeui.FormResultFunctionGenerator();\n    functionGenerator.setInput(formValue,formMeta);\n    admin.getCommandMessenger().dataCommand(\"formFunctionBody1\",functionGenerator.getFunctionBody());\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Simple Expression Form\",\n    },\n    {\n        type: \"textField\",\n        label: \"Cell Reference: \",\n        size: 60,\n        key: \"referenceField\",\n        hint: \"cell reference\",\n        meta: {\n            expression: \"reference\",\n            excludeValue: \"\"\n        }\n    },\n    {\n        type: \"textField\",\n        label: \"Plain String: \",\n        size: 60,\n        key: \"textField\",\n        hint: \"text\",\n        meta: {\n            excludeValue: \"\"\n        }\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Submit\"\n    }\n];\n","supplementalCode":""}},"dummy":{"name":"dummy","type":"apogee.JsonMember","updateData":{"data":956}},"formFunctionBody3":{"name":"formFunctionBody3","type":"apogee.JsonMember","updateData":{"data":""}},"formResult3":{"name":"formResult3","type":"apogee.JsonMember","updateData":{"data":""}},"formFunctionBody2":{"name":"formFunctionBody2","type":"apogee.JsonMember","updateData":{"data":"let output = {};\noutput[\"expressionField\"] = dummy * 2\noutput[\"textField\"] = \"dummy * 2\"\nreturn output;"}},"formResult2":{"name":"formResult2","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"expressionField\"] = dummy * 2\noutput[\"textField\"] = \"dummy * 2\"\nreturn output;","supplementalCode":""}},"expressionForm2":{"name":"expressionForm2","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    let formMeta = formObject.getMeta();\n    let functionGenerator = new apogeeui.FormResultFunctionGenerator();\n    functionGenerator.setInput(formValue,formMeta);\n    admin.getCommandMessenger().dataCommand(\"formFunctionBody2\",functionGenerator.getFunctionBody());\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Simple Expression Form\",\n    },\n    {\n        type: \"textField\",\n        label: \"Expression: \",\n        size: 60,\n        key: \"expressionField\",\n        hint: \"expression\",\n        meta: {\n            expression: \"code\",\n            excludeValue: \"\"\n        }\n    },\n    {\n        type: \"textField\",\n        label: \"Plain String: \",\n        size: 60,\n        key: \"textField\",\n        hint: \"text\",\n        meta: {\n            excludeValue: \"\"\n        }\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Submit\"\n    }\n];\n","supplementalCode":""}},"expressionForm3":{"name":"expressionForm3","type":"apogee.JsonMember","updateData":{"data":""}}}},"formComponents":{"name":"formComponents","type":"apogee.Folder","children":{"dataFormCell":{"name":"dataFormCell","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Name: ","customLayout":{"size":"50"},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"name"}},{"key":"basicDropdown","value":{"uniqueKey":"basicDropdown","type":"dropdown","label":"Number Choices: ","entries":"referenceValueList","entriesType":"reference","valueMixed":"","valueType":"string","hint":"","help":"","useSelector":"none","key":"numChoices"}},{"key":"basicCheckboxGroup","value":{"uniqueKey":"basicCheckboxGroup","type":"checkboxGroup","label":"Letter Choices: ","entriesList":[{"valueMixed":"a","valueType":"string","displayLabel":"The Letter A"},{"valueMixed":"b","valueType":"string","displayLabel":""},{"valueMixed":"c","valueType":"string","displayLabel":""}],"entriesType":"value","customLayout":{"vertical":false},"valueArray":[],"valueType":"value","hint":"","help":"","useSelector":"none","key":"letterChoices"}}]}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"uniqueKey\"] = \"topLevelDataPanel\"\noutput[\"type\"] = \"panel\"\noutput[\"formData\"]= []\noutput[\"formData\"][0]= {};\noutput[\"formData\"][0][\"key\"] = \"basicTextField\"\noutput[\"formData\"][0][\"value\"]= {};\noutput[\"formData\"][0][\"value\"][\"uniqueKey\"] = \"basicTextField\"\noutput[\"formData\"][0][\"value\"][\"type\"] = \"textField\"\noutput[\"formData\"][0][\"value\"][\"label\"] = \"Name: \"\noutput[\"formData\"][0][\"value\"][\"customLayout\"]= {};\noutput[\"formData\"][0][\"value\"][\"customLayout\"][\"size\"] = \"50\"\noutput[\"formData\"][0][\"value\"][\"value\"] = \"\"\noutput[\"formData\"][0][\"value\"][\"expressionType\"] = \"value\"\noutput[\"formData\"][0][\"value\"][\"hint\"] = \"\"\noutput[\"formData\"][0][\"value\"][\"help\"] = \"\"\noutput[\"formData\"][0][\"value\"][\"useSelector\"] = \"none\"\noutput[\"formData\"][0][\"value\"][\"key\"] = \"name\"\noutput[\"formData\"][1]= {};\noutput[\"formData\"][1][\"key\"] = \"basicDropdown\"\noutput[\"formData\"][1][\"value\"]= {};\noutput[\"formData\"][1][\"value\"][\"uniqueKey\"] = \"basicDropdown\"\noutput[\"formData\"][1][\"value\"][\"type\"] = \"dropdown\"\noutput[\"formData\"][1][\"value\"][\"label\"] = \"Number Choices: \"\noutput[\"formData\"][1][\"value\"][\"entries\"] = referenceValueList\noutput[\"formData\"][1][\"value\"][\"entriesType\"] = \"reference\"\noutput[\"formData\"][1][\"value\"][\"valueMixed\"] = \"\"\noutput[\"formData\"][1][\"value\"][\"valueType\"] = \"string\"\noutput[\"formData\"][1][\"value\"][\"hint\"] = \"\"\noutput[\"formData\"][1][\"value\"][\"help\"] = \"\"\noutput[\"formData\"][1][\"value\"][\"useSelector\"] = \"none\"\noutput[\"formData\"][1][\"value\"][\"key\"] = \"numChoices\"\noutput[\"formData\"][2]= {};\noutput[\"formData\"][2][\"key\"] = \"basicCheckboxGroup\"\noutput[\"formData\"][2][\"value\"]= {};\noutput[\"formData\"][2][\"value\"][\"uniqueKey\"] = \"basicCheckboxGroup\"\noutput[\"formData\"][2][\"value\"][\"type\"] = \"checkboxGroup\"\noutput[\"formData\"][2][\"value\"][\"label\"] = \"Letter Choices: \"\noutput[\"formData\"][2][\"value\"][\"entriesList\"]= []\noutput[\"formData\"][2][\"value\"][\"entriesList\"][0]= {};\noutput[\"formData\"][2][\"value\"][\"entriesList\"][0][\"valueMixed\"] = \"a\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][0][\"valueType\"] = \"string\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][0][\"displayLabel\"] = \"The Letter A\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][1]= {};\noutput[\"formData\"][2][\"value\"][\"entriesList\"][1][\"valueMixed\"] = \"b\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][1][\"valueType\"] = \"string\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][1][\"displayLabel\"] = \"\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][2]= {};\noutput[\"formData\"][2][\"value\"][\"entriesList\"][2][\"valueMixed\"] = \"c\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][2][\"valueType\"] = \"string\"\noutput[\"formData\"][2][\"value\"][\"entriesList\"][2][\"displayLabel\"] = \"\"\noutput[\"formData\"][2][\"value\"][\"entriesType\"] = \"value\"\noutput[\"formData\"][2][\"value\"][\"customLayout\"]= {};\noutput[\"formData\"][2][\"value\"][\"customLayout\"][\"vertical\"] = false\noutput[\"formData\"][2][\"value\"][\"valueArray\"] = []\noutput[\"formData\"][2][\"value\"][\"valueType\"] = \"value\"\noutput[\"formData\"][2][\"value\"][\"hint\"] = \"\"\noutput[\"formData\"][2][\"value\"][\"help\"] = \"\"\noutput[\"formData\"][2][\"value\"][\"useSelector\"] = \"none\"\noutput[\"formData\"][2][\"value\"][\"key\"] = \"letterChoices\"\nreturn output;","supplementalCode":"","contextParentGeneration":2}},"data":{"name":"data","type":"apogee.DesignerDataFormMember"},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":{"name":"Dave","numChoices":1,"letterChoices":["a","c"]}}}}},"referenceValueList":{"name":"referenceValueList","type":"apogee.JsonMember","updateData":{"data":[1,2,3]}},"actionFormCell":{"name":"actionFormCell","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicHeading","value":{"uniqueKey":"basicHeading","type":"heading","customLayout":{"text":"Insensitive Form","level":"default"},"useSelector":"none"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Name: ","customLayout":{"size":""},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"name"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Salary: ","customLayout":{"size":""},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"salary"}},{"key":"basicRadioGroup","value":{"uniqueKey":"basicRadioGroup","type":"radioButtonGroup","label":"Weight: ","entriesList":[{"valueMixed":"Anorexic","valueType":"string","displayLabel":""},{"valueMixed":"Overweight","valueType":"string","displayLabel":""},{"valueMixed":"Obese","valueType":"string","displayLabel":""}],"entriesType":"value","customLayout":{"vertical":false},"valueMixed":"","valueType":"string","hint":"","help":"","useSelector":"none","key":"weight"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":false}}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicHeading","value":{"uniqueKey":"basicHeading","type":"heading","customLayout":{"text":"Insensitive Form","level":"default"},"useSelector":"none"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Name: ","customLayout":{"size":""},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"name"}},{"key":"basicTextField","value":{"uniqueKey":"basicTextField","type":"textField","label":"Salary: ","customLayout":{"size":""},"value":"","expressionType":"value","hint":"","help":"","useSelector":"none","key":"salary"}},{"key":"basicRadioGroup","value":{"uniqueKey":"basicRadioGroup","type":"radioButtonGroup","label":"Weight: ","entriesList":[{"valueMixed":"Anorexic","valueType":"string","displayLabel":""},{"valueMixed":"Overweight","valueType":"string","displayLabel":""},{"valueMixed":"Obese","valueType":"string","displayLabel":""}],"entriesType":"value","customLayout":{"vertical":false},"valueMixed":"","valueType":"string","hint":"","help":"","useSelector":"none","key":"weight"}}],"submit":{"type":"submit","useSubmit":true,"submitLabel":"OK","useCancel":false}},"contextParentGeneration":2}},"data":{"name":"data","type":"apogee.DesignerActionFormMember"}},"childrenNotWriteable":true},"formOutput":{"name":"formOutput","type":"apogee.JsonMember","updateData":{"data":{"name":"Bill","salary":"30000","weight":"Overweight"}}},"fullDataFormCell":{"name":"fullDataFormCell","type":"apogee.Folder","children":{"input":{"name":"input","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {numberChoices,letterChoices};","supplementalCode":""}},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":{"name":"George","numChoices":2,"letterChoices":["b"]}}}}},"numberChoices":{"name":"numberChoices","type":"apogee.JsonMember","updateData":{"data":[1,2,3]}},"letterChoices":{"name":"letterChoices","type":"apogee.JsonMember","updateData":{"data":["a","b",["The letter C","c"]]}},"layoutFromDataFormCell":{"name":"layoutFromDataFormCell","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return dataFormCell.data","supplementalCode":""}},"layoutFromActionFormCell":{"name":"layoutFromActionFormCell","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return actionFormCell.data","supplementalCode":""}},"fullActionFormCell":{"name":"fullActionFormCell","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let inputData = {};\ninputData.weightOptions = weightOptions;\nreturn inputData;","supplementalCode":""}},"weightOptions":{"name":"weightOptions","type":"apogee.JsonMember","updateData":{"data":["Anorexic","Overweight","Obese"]}},"formOutput2":{"name":"formOutput2","type":"apogee.JsonMember","updateData":{"data":{"name":"Bill","salary":"not applicable","weight":"Anorexic"}}}}}}}}},"components":{"main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Apogee Forms Reference - v2.0"}]},{"type":"paragraph","content":[{"type":"text","text":"Apogee has a configurable form widget for easily creating forms. This reference illustrates how to create these forms. "}]},{"type":"heading2","content":[{"type":"text","text":"Index of this Workspace"}]},{"type":"heading3","content":[{"type":"text","text":"Form Components"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formComponents"},{"type":"text","text":" shows some standard form cells you can include in your workspace."}]},{"type":"heading3","content":[{"type":"text","text":"Form Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formElements"},{"type":"text","text":" shows each standard form element, which you can access from the tree panel on the left."}]},{"type":"heading3","content":[{"type":"text","text":"Form Layouts"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formLayouts"},{"type":"text","text":" shows each standard form layout, which you can access from the tree panel on the left."}]},{"type":"heading3","content":[{"type":"text","text":"Selectors"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"selectors "},{"type":"text","text":"shows how to use selectors, which control one form element based on the value of another form element."}]},{"type":"heading3","content":[{"type":"text","text":"Using Expressions in Forms"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"expressionForms"},{"type":"text","text":" shows how to use javascript expressions in forms. This requires the use of the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"meta"},{"type":"text","text":" tag."}]}]}},"children":{"formElements":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Form Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we show all the standard "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"ConfigurableElements"},{"type":"text","text":", each defined with all type specific properties included, shown on pages defined beneath this one."}]},{"type":"paragraph","content":[{"type":"text","text":"See the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formLayouts"},{"type":"text","text":" section to see the standard "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"ConfigurableLayoutContainers"},{"type":"text","text":"."}]}]}},"children":{"checkbox":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"checkbox\" Element"}]},{"type":"heading2","content":[{"type":"text","text":"Checkbox in the Form Designer"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample checkbox with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"checkboxInDesigner","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Checkbox with Manual Layout"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a checkbox defined using a json/javascript layout rather than using the form designer."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"checkboxInDesigner":{"type":"apogeeapp.DesignerDataFormCell","validatorCode":"return true","allowInputExpressions":true,"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":true},"On Save":{"isViewActive":false},"Value":{"isViewActive":true,"height":280}}}}},"sampleElement":{"type":"apogeeapp.FullDataFormCell","layoutCode":"return [\n    {\n        type: \"checkbox\", //REQUIRED\n        label: \"My Checkbox: \", //OPTIONAL\n        hint: \"This is a checkbox\", //OPTIONAL\n        help: \"The value of the checkbox is true if checked and false if not checked.\", //OPTIONAL\n        value: true, //OPTIONAL, defaults to false\n        key: \"myCheckbox\" //REQUIRED\n    }  \n];","validatorCode":"return true","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"isViewActive":true,"height":7000},"validator":{"isViewActive":false},"input":{"isViewActive":false},"inputPrivate":{"isViewActive":false},"value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"panel":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"panel\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample panel with all type-specific elements present. The panel element here is one of three inside the parent form."}]},{"type":"paragraph","content":[{"type":"text","text":"This is basically another ConfigurableForm wrapped inside an element. The appearance of the output form looks as if we just defined to checkboxes in our top level form. However, they are wrapped in a child form. This can be seen by looking at the form value."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"list":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"list\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we show two forms containing list elements. The list element allows the end user to add an arbitrary number of elements to the list."}]},{"type":"heading2","content":[{"type":"text","text":"Single Element List"}]},{"type":"paragraph","content":[{"type":"text","text":"The list can be defined so there is a single element type, or in other words all elements are the same type. This must be a single configurable element. Because of this, it is often a "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"panel"},{"type":"text","text":" object. Here however we used a "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"textField"},{"type":"text","text":"."}]},{"type":"apogeeComponent","attrs":{"name":"singleElementList","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Multi Element List"}]},{"type":"paragraph","content":[{"type":"text","text":"The list can be defined so there are multiple element types. Again, each must be composed of a single configurable element object."}]},{"type":"paragraph","content":[{"type":"text","text":"There is an important difference between the multi-element list and the single element list. In the multi-element list, the entries in the output value list contains the type of element and the element value. In the single element list, the entries in the output list are just the contained element values. This is why there are two distinct list types."}]},{"type":"paragraph","content":[{"type":"text","text":"It is possible to make a multi-element list that only has a single entry, but this will be different from a single element list."}]},{"type":"apogeeComponent","attrs":{"name":"multiElementList","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"If there are too many entries, the add buttons are replaced with a dropdown. The default max button count is three. This can be overridden with a setting. Below is a list with more buttons."}]},{"type":"apogeeComponent","attrs":{"name":"multiElementList2","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"multiElementList":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":7000}}}}},"singleElementList":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"multiElementList2":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":7000}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"colorPicker":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"colorPicker\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"colorPicker"},{"type":"text","text":" with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"dropdown":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"dropdown\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"dropdown"},{"type":"text","text":" with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"heading":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"heading\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"heading"},{"type":"text","text":" with all type-specific elements present. This is a non-interactive element."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"htmlDisplay":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"htmlDisplay\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"htmlDisplay"},{"type":"text","text":" with all type-specific elements present. This is a non-interactive element that allows you to place any raw HTML. Below we inserted a div with some text."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"invisible":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"invisible\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"invisible"},{"type":"text","text":" with all type-specific elements present. This is usually used to carry some payload value with the form."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"radioButtonGroup":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"radioButtonGroup\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"radioButtonGroup "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"sliderElement":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"slider\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"slider "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"spacerElement":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"spacer\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"spacer"},{"type":"text","text":" with all type-specific elements present. This adds a specified amount of vertical space in pixels. This is a non-interactive element."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"textField":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"textField\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"textField"},{"type":"text","text":" with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"checkboxGroup":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"checkboxGroup\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"checkboxGroup "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"textarea":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"textarea\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"textarea "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"formLayouts":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Form Layouts"}]},{"type":"paragraph","content":[{"type":"text","text":"This is a parent page for the different layout elements, the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"ConfigurableLayoutContainers."}]},{"type":"paragraph","content":[{"type":"text","text":"Layout elements take child elements and modify the layout of them. They do not affect the values, meaning the value of a child element in the layout appears in the output as if it were a child in the layout's parent panel. See the examples for more information."}]}]}},"children":{"showHideLayout":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"showHideLayout\" Layout"}]},{"type":"paragraph","content":[{"type":"text","text":"The "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"showHideLayout"},{"type":"text","text":" has a heading element that allows the end user to show or hide all the elements in the layout. The values of all the hidden elements are still in the form value when the layout is hidden."}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"showHideLayout"},{"type":"text","text":" with all type-specific elements present. Below we start the layout in the closed (or hidden) state. You can open it with the arrow that appears in the layout heading."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"horizontalLayout":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"horizontalLayout\" Layout"}]},{"type":"paragraph","content":[{"type":"text","text":"The "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"horizontalLayout"},{"type":"text","text":" aligns the child elements horizontally. Below we put the city, state and zipcode fields in a horizontal layout."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"selectors":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Selectors"}]},{"type":"paragraph","content":[{"type":"text","text":"Using "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"selectors"},{"type":"text","text":", you can control the state of one element based on the value of another element."}]},{"type":"heading2","content":[{"type":"text","text":"Simple Example"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a simple example where we can set the state of an element to \"normal\" or \"inactive\" based on a parent value."}]},{"type":"paragraph","content":[{"type":"text","text":"Here, we control the elements for the dog breed and the cat breed based on whether we have a dog or cat."}]},{"type":"apogeeComponent","attrs":{"name":"aSimpleSelection","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Multi-value Selection Example"}]},{"type":"paragraph","content":[{"type":"text","text":"In this example, we have a selector that makes the element visible if the parent value has one of multiple values."}]},{"type":"apogeeComponent","attrs":{"name":"bMultiValueSelection","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Simple Selection, Multi-value Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"There is another case we should illustrate. A checkbox group has a list of output values. It is an example of a multi-value element. In this case, a selector will work if any of the selector values are selected. See the example below."}]},{"type":"apogeeComponent","attrs":{"name":"cMultiOptionSelection","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"And, for completeness..."}]},{"type":"paragraph","content":[{"type":"text","text":"Here we allow any or multiple values to be selected in a parent will multi value selection."}]},{"type":"apogeeComponent","attrs":{"name":"dMultiValueMultiOptionSelection","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Absolute Paths"}]},{"type":"paragraph","content":[{"type":"text","text":"Above, we specified a parent key as a simple string. Doing that you can select any key in your current panel. You can also use an array of strings, in which you are specifying a key path from the root panel."}]},{"type":"paragraph","content":[{"type":"text","text":"In this example, the checkbox element labeled \"Show Other Element\" on a child panel controls the visibility of the text field labeled \"Other Element\""}]},{"type":"apogeeComponent","attrs":{"name":"eAbsoluteParentPath","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Other Selector Actions"}]},{"type":"paragraph","content":[{"type":"text","text":"The default selector action is to set the state to normal or inactive based on the value of the parent. There are other actions:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Toggle state \"normal\" / \"inactive\" - This is the default case."}]},{"type":"listItem","content":[{"type":"text","text":"Toggle state \"normal\" / \"hidden\" - With this option, the element is hidden if the parent value is not met, AND the value still appears in the form result."}]},{"type":"listItem","content":[{"type":"text","text":"Toggle state \"normal\" / \"disabled\" - With this option, the element is disabled if the parent value is not met."}]}]},{"type":"apogeeComponent","attrs":{"name":"fOtherActions","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Custom Action"}]},{"type":"paragraph","content":[{"type":"text","text":"It is also possible to construct a custom action."}]},{"type":"paragraph","content":[{"type":"text","text":"Here you can specify a single parent OR multiple parents."}]},{"type":"paragraph","content":[{"type":"text","text":"The action function you include has the following arguments:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"childElement - This is a javascript object representing the child element"}]},{"type":"listItem","content":[{"type":"text","text":"parentElement1 - This is a javascript object representing the first parent element."}]},{"type":"listItem","content":[{"type":"text","text":"parentElement2 - If there are multiple parents, this is a javascript object representing the second parent"}]},{"type":"listItem","content":[{"type":"text","text":"... (All other specified parent elements are included too)"}]}]},{"type":"paragraph","content":[{"type":"text","text":"The main accessors you will be using from the elements are:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"getValue()"}]},{"type":"listItem","content":[{"type":"text","text":"getState()"}]},{"type":"listItem","content":[{"type":"text","text":"setValue(value)"}]},{"type":"listItem","content":[{"type":"text","text":"setState(state)"}]}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show two examples of custom accessors, one with a single parent and one with multiple parents. "}]},{"type":"paragraph","content":[{"type":"text","text":"See the note below for more information on this example."}]},{"type":"apogeeComponent","attrs":{"name":"gCustomAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"In this example, we triggered the state of the dog breed element on the pet type being \"Dog\". However, we had some extra work to do."}]},{"type":"paragraph","content":[{"type":"text","text":"Unlike in the returned value of a form, in a selector, the value used is the value of the element whether or not the element is visible."}]},{"type":"paragraph","content":[{"type":"text","text":"Here, we show or hide the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"petType"},{"type":"text","text":" element based on whether or not the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"hasPet"},{"type":"text","text":" element is checked. So here we don't only check its value we check if it is also active."}]}]}},"children":{"aSimpleSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"bMultiValueSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"cMultiOptionSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"dMultiValueMultiOptionSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"eAbsoluteParentPath":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"fOtherActions":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"gCustomAction":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"expressionForms":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Using Expressions in Forms"}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"},{"type":"textcolor","attrs":{"color":"red"}}],"text":"For the time being, this page is meant only for developers creating new cells."}]},{"type":"paragraph","content":[{"type":"text","text":"It is possible to let the user enter cell references or even javascript expressions in forms, if you include the appropriate \"meta\" tags in your form layout and then use the FormResultFunctionGenerator to create a function body from the form output. This can then be used as the formula for a cell, applying the user reference or expression to the output. "}]},{"type":"paragraph","content":[{"type":"text","text":"This is done when creating some custom components. The Chart.js component, for example, uses expression on its \"Configuration\" form."}]},{"type":"paragraph","content":[{"type":"text","text":"This page shows how to set up the form to support expressions. As shown on this page, this is not intended for use in normal workspaces."}]},{"type":"heading2","content":[{"type":"text","text":"Data For Examples"}]},{"type":"apogeeComponent","attrs":{"name":"dummy","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Simple Example"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we create a simple action form. In the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"onSubmit"},{"type":"text","text":" function we call the library method to convert the form into a function body that will evaluate the expressions."}]},{"type":"paragraph","content":[{"type":"text","text":"The form must include some \"meta\" tags to properly do this. IN this example we are asking for a cell reference input. This can actually be the name of any javascript variable, with dot names allowed."}]},{"type":"paragraph","content":[{"type":"text","text":"In the example below we convert the first text field into a reference expression and the second remains as text. In addition, we \"exclude\" the value from the resulting formula if it is an empty string."}]},{"type":"paragraph","content":[{"type":"text","text":"On pressing submit, the created function body is passed into the data for the cell \"formFunctionBody\", which displays it as plain text."}]},{"type":"paragraph","content":[{"type":"text","text":"To try this example, do the following:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"In the cell "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"expressionForm1"},{"type":"text","text":", type values into the two text fields. For now, type "},{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"blue"}},{"type":"fontfamily","attrs":{"fontfamily":"Monospace"}}],"text":"dummy"},{"type":"text","text":" into each field."}]},{"type":"listItem","content":[{"type":"text","text":"Press submit."}]},{"type":"listItem","content":[{"type":"text","text":"View the output displayed as text in the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody1"},{"type":"text","text":" cell below. "}]},{"type":"listItem","content":[{"type":"text","text":"Copy the text from  "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody1"},{"type":"text","text":" into the formula for "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formResult1"},{"type":"text","text":". When you save it, it should have the first text field evaluated as an expression and the second as a plain string."}]}]},{"type":"apogeeComponent","attrs":{"name":"expressionForm1","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The function body for the form result is sent here. Note the only slight difference between the two fields."}]},{"type":"apogeeComponent","attrs":{"name":"formFunctionBody1","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"We must manually copy this into the formula for the table below, where it can be evaluated. (Again, this is not for standard workspaces, but instead for cell development.)"}]},{"type":"apogeeComponent","attrs":{"name":"formResult1","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Full Expression Example"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a copy of the cells above but this time we allow a \"code\" expression."}]},{"type":"paragraph","content":[{"type":"text","text":"To try this example, do the following:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"In the cell "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"expressionForm1"},{"type":"text","text":", type values into the two text fields. For now, type "},{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"blue"}},{"type":"fontfamily","attrs":{"fontfamily":"Sans-serif"}}],"text":"dummy * 2"},{"type":"text","text":" into each field."}]},{"type":"listItem","content":[{"type":"text","text":"Press submit."}]},{"type":"listItem","content":[{"type":"text","text":"View the output displayed as text in the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody1"},{"type":"text","text":" cell below. "}]},{"type":"listItem","content":[{"type":"text","text":"Copy the text from  "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody1"},{"type":"text","text":" into the formula for "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formResult1"},{"type":"text","text":". When you save it, it should have the first text field evaluated as an expression and the second as a plain string."}]}]},{"type":"apogeeComponent","attrs":{"name":"expressionForm2","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The function body for the form result is sent here. Again, note the only slight difference between the two fields."}]},{"type":"apogeeComponent","attrs":{"name":"formFunctionBody2","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"We must manually copy this into the formula for the table below, where it can be evaluated. (Again, this is not for standard workspaces, but instead for cell development.)"}]},{"type":"apogeeComponent","attrs":{"name":"formResult2","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Choice Expression"}]},{"type":"paragraph","content":[{"type":"text","text":"A common scenario is to let the user choose if they are entering a value or a reference. It may be less common to let them enter full code, but that can be done too, as we do below."}]},{"type":"paragraph","content":[{"type":"text","text":"In this example, add list entries and try different values, according to the value type."}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"For a \"value\" (choice \"Value\" below), any string will work."}]},{"type":"listItem","content":[{"type":"text","text":"For a reference (choice \"Reference\" below), \"dummy\" (a cell name above), \"Math.PI\" (a built in variable), and \"asdfas.asdf\" all work."}]},{"type":"listItem","content":[{"type":"text","text":"For a code expression (choice \"Javascript\" below), some valid examples are \"dummy * 2\" are \"[1,2,3]\""}]}]},{"type":"paragraph","content":[{"type":"text","text":"Note that if you enter an javascript expression into the reference field, an error will be shown. For this reason, it is a good idea to handle in the \"onSubmit\" button as we have below."}]},{"type":"apogeeComponent","attrs":{"name":"expressionForm3","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The function body for the form result is sent here."}]},{"type":"apogeeComponent","attrs":{"name":"formFunctionBody3","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"We must manually copy this into the formula for the table below, where it can be evaluated. (Again, this is not for standard workspaces, but instead for cell development.)"}]},{"type":"apogeeComponent","attrs":{"name":"formResult3","id":0,"state":""}},{"type":"heading2"}]}},"children":{"formFunctionBody1":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"formResult1":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"expressionForm1":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Form":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"dummy":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"formFunctionBody3":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"formResult3":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"formFunctionBody2":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"formResult2":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"expressionForm2":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Form":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"expressionForm3":{"type":"apogeeapp.FullActionFormCell","layoutCode":"let onSubmit = (formValue,formObject) => {\n    try {\n    let formMeta = formObject.getMeta();\n    let functionBody = apogeeui.getFormResultFunctionBody(formValue,formMeta);\n    commandMessenger.dataCommand(\"formFunctionBody3\",functionBody);\n    }\n    catch(error) {\n        if(error.stack) console.error(error.stack);\n        apogeeUserAlert(\"Error in submit: \" + error.toString());\n    }\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Simple Expression Form\",\n    },\n    {\n        type: \"list\",\n        label: \"List: \",\n        entryType: {\n            label: \"Entry\",\n            layout: {\n                type: \"panel\",\n                formData: [\n                    {\n                        type: \"textField\",\n                        label: \"Entry Name: \",\n                        key: \"entryName\"\n                    },\n                    {\n                        type: \"textField\",\n                        label: \"Value: \",\n                        size: 60,\n                        key: \"expressionField\",\n                        hint: \"expression\",\n                        meta: {\n                            expression: \"choice\", //we make this a choice expression\n                            expressionChoiceKey: \"valueType\", //this tells us what the choice is\n                            //Below , we can remap the values of value type if they are not the ones we want.\n                            //Feel free to experiment with that. In this case we do not need it.\n                            //expressionChoiceMap: {\n                            //    \"value\": \"value\",\n                            //    \"reference\": \"reference\",\n                            //    \"code\": \"code\"\n                            //},\n                            excludeValue: \"\" //if the value of the field is \"\", we exclude it\n                        }\n                    },\n                    {\n                        type: \"radioButtonGroup\",\n                        label: \"Value Type: \",\n                        entries: [[\"Value\",\"value\"],[\"Reference\",\"reference\"],[\"Javascript\",\"code\"]],\n                        value: \"value\",\n                        key: \"valueType\"\n                    },\n                ],\n                meta: {\n                    //if there are child values on the panel that will be converted to expressions on the form, we must speciy this\n                    //otherwise we can leave it blank\n                    expression: \"object\" \n                }\n            }\n        },\n        key: \"sampleList\",\n        meta: {\n            //if there are child values in the list that will be converted to expressions on the form, we must speciy this\n            //otherwise we can leave it blank\n            expression: \"array\"\n        }\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Submit\"\n    }\n];\n","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"height":7000,"isViewActive":false},"input":{"isViewActive":false},"inputPrivate":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"formComponents":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Form Components"}]},{"type":"paragraph","content":[{"type":"text","text":"This pages shows some of the standard form components."}]},{"type":"heading2","content":[{"type":"text","text":"Data Form Cell"}]},{"type":"paragraph","content":[{"type":"text","text":"A "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Data Form Cell"},{"type":"text","text":" is similar to a JSON "},{"type":"text","marks":[{"type":"italic"}],"text":"Data Cell"},{"type":"text","text":" except the user enters data into a form rather than text editor. The configurable form format is defined by the programmer. When the user changes the value, the "},{"type":"text","marks":[{"type":"italic"}],"text":"save bar"},{"type":"text","text":" appears just as if the user changed the value of a data table. When the user saves, the data is saved to an internal data table which can be viewed in the cell or accessed from code."}]},{"type":"heading3","content":[{"type":"text","text":"Form Designer"}]},{"type":"paragraph","content":[{"type":"text","text":"We define the form using the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Form Designer"},{"type":"text","text":". This gives us a simple for to create our form."}]},{"type":"paragraph","content":[{"type":"text","text":"From the properties dialog box, accessed from the three dots menu after the cell name, there are some additional properties:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Allow Input Expressions - If this is selected, the default, the form designer allows the input of cell references and other expressions to create the form layout. Otherwise, only static values can be used to create the layout."}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"FUTURE Allow Output Expressions - If this is selected the form designer allows for the creation of forms which allow expressions as input. Otherwise the created for layout only takes static values."}]}]},{"type":"paragraph","content":[{"type":"text","text":"In the form below, we add some random elements. We include a reference value."}]},{"type":"heading3","content":[{"type":"text","text":"Is Valid Function"}]},{"type":"paragraph","content":[{"type":"text","text":"There is also the option to include an function to validate the response, the \"isValid\" function. We have included this also. Alternatively, it can be left to return true all the time."}]},{"type":"paragraph","content":[{"type":"text","text":"An important note about the Is Valid function is that it is \"UI code\", meaning it does not have access to the data model. For example, you can not reference the value of a remote cell. The form value and the form layout are however passed into the function as arguments."}]},{"type":"heading3","content":[{"type":"text","text":"\"Value\" View"}]},{"type":"paragraph","content":[{"type":"text","text":"Lastly, there is a view call \"Value\". This holds the value for the form. If you edit this value, it also updates the form. "}]},{"type":"paragraph","content":[{"type":"text","text":"Note that it is possible to set a value here that can not be represented on the form. In this case the form value will not agree with the set value."}]},{"type":"apogeeComponent","attrs":{"name":"dataFormCell","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is a cell use to illustrate a reference in our form."}]},{"type":"apogeeComponent","attrs":{"name":"referenceValueList","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Reading the Layout from the Form Designer"}]},{"type":"paragraph","content":[{"type":"text","text":"It is possible to read the layout from the form designer, but looking at the "},{"type":"text","marks":[{"type":"italic"}],"text":"data"},{"type":"text","text":" field from the cell. See the example below. "}]},{"type":"apogeeComponent","attrs":{"name":"layoutFromDataFormCell","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Action Form Cell"}]},{"type":"paragraph","content":[{"type":"text","text":"Whereas the Data Form Cell is like a Data Cell, the Action Form Cell is more like a dialog box. It has not stored value. Instead it has a \"submit\" button which allows you to take action."}]},{"type":"paragraph","content":[{"type":"text","text":"There are two functions that can be implemented, "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"onSubmit"},{"type":"text","text":" and "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"onCancel"},{"type":"text","text":", which define the handlers for the submit and cancel buttons. Like the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"isValid"},{"type":"text","text":" function in the data form, these functions are UI functions and do not have access to other cells."}]},{"type":"paragraph","content":[{"type":"text","text":"In the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"onSubmit"},{"type":"text","text":" function "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"command messenger"},{"type":"text","text":" can be used to set data in other cells, as is illustrated here."}]},{"type":"apogeeComponent","attrs":{"name":"actionFormCell","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"We use the cell below as a destination to send the output of the form using the command messenger."}]},{"type":"apogeeComponent","attrs":{"name":"formOutput","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Reading the Layout from the Form Designer"}]},{"type":"paragraph","content":[{"type":"text","text":"As with the data form cell, it is possible to read the layout from the form designer, but looking at the "},{"type":"text","marks":[{"type":"italic"}],"text":"data"},{"type":"text","text":" field from the cell. See the example below."}]},{"type":"apogeeComponent","attrs":{"name":"layoutFromActionFormCell","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Full Data Form Cell"}]},{"type":"paragraph","content":[{"type":"text","text":"In addition to the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Data Form Cell"},{"type":"text","text":", which uses the form designer, there is the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Full Data Form Cell"},{"type":"text","text":", which allows you to programmatically set the layout."}]},{"type":"heading3","content":[{"type":"text","text":"Layout Code"}]},{"type":"paragraph","content":[{"type":"text","text":"The layout code should return a form layout. See the documentation for the required format."}]},{"type":"paragraph","content":[{"type":"text","text":"Also, this is UI code, meaning you do not have access to other cells from this code. Instead, you can use the views "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Input Data Code"},{"type":"text","text":" and the associated "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Input Data Private"},{"type":"text","text":" to read data from the model and then pass it in to the layout code function, as illustrated below."}]},{"type":"paragraph","content":[{"type":"text","text":"Not accessing the model data directly is a little inconvenient. It would be possible to allow access for a layout. However, there are some cases where model access is not appropriate. Rather than put an restrictions on the layout we omitted access to the model from this function, which is why it is called the full data form cell."}]},{"type":"heading3","content":[{"type":"text","text":"Input Data Code and Input Data Private"}]},{"type":"paragraph","content":[{"type":"text","text":"These are ways to write code for an input data member. The view "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Input Data Code"},{"type":"text","text":" provides the formula for this internal member. The "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Input Data Private"},{"type":"text","text":" is the associated private code for that member. (See the standard JSON data cell for another example.) When the layout function is called, the value from the Input Data member is passed as an argument."}]},{"type":"heading3","content":[{"type":"text","text":"\"Value\" View"}]},{"type":"paragraph","content":[{"type":"text","text":"As with the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Data Form Cell"},{"type":"text","text":" above, the output value for the form is stored in the view \"Value\". You can access this remotely and you can set the value of the form through this field. As with the data form cell, be careful of setting a value that can not be represented on the form."}]},{"type":"apogeeComponent","attrs":{"name":"fullDataFormCell","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"These two tables below are used to illustrate accessing data form the model in the form."}]},{"type":"apogeeComponent","attrs":{"name":"numberChoices","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"letterChoices","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Full Action Form Cell"}]},{"type":"paragraph","content":[{"type":"text","text":"The Full Action Form Cell is similar to the Full Data Form Cell in that you (1) can programmatically control the layout (2) must use the input code to access values from other cells. It is different in that it does not have a value. Instead you should add a \"submit\" form element to the form and provide an "},{"type":"text","marks":[{"type":"italic"}],"text":"onSubmit"},{"type":"text","text":" function for it. (Note that you can also have a \"cancel\" button on the \"submit\" element, with a "},{"type":"text","marks":[{"type":"italic"}],"text":"onCancel"},{"type":"text","text":" function you provide.)"}]},{"type":"paragraph","content":[{"type":"text","text":"In this example we access data from the cell "},{"type":"text","marks":[{"type":"italic"}],"text":"weightOptions"},{"type":"text","text":" when setting up the form and we send the output to the cell "},{"type":"text","marks":[{"type":"italic"}],"text":"formOutput2"},{"type":"text","text":"."}]},{"type":"apogeeComponent","attrs":{"name":"fullActionFormCell","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a cell used to help define the layout."}]},{"type":"apogeeComponent","attrs":{"name":"weightOptions","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a cell to hold the output."}]},{"type":"apogeeComponent","attrs":{"name":"formOutput2","id":0,"state":""}}]}},"children":{"dataFormCell":{"type":"apogeeapp.DesignerDataFormCell","validatorCode":"if((!formValue.name)||(formValue.name.length == 0)) {\n    //You can return an error message or, for a default error message, a \"false\" response.\n    return \"You must enter a name!\";\n}\nelse {\n    return true;\n}","allowInputExpressions":true,"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":true},"On Save":{"height":7000,"isViewActive":true},"Value":{"height":280,"isViewActive":true}}}}},"referenceValueList":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"actionFormCell":{"type":"apogeeapp.DesignerActionFormCell","onSubmitCode":"cmdMsngr.dataCommand(\"formOutput\",formValue);","onCancelCode":"","allowInputExpressions":true,"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":true},"On Save":{"isViewActive":true,"height":7000},"On Cancel":{"isViewActive":false}}}}},"formOutput":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"fullDataFormCell":{"type":"apogeeapp.FullDataFormCell","layoutCode":"return [\n\t{\n\t\t\"type\": \"textField\",\n\t\t\"label\": \"Name: \",\n\t\t\"key\": \"name\",\n\t\t\"size\": 50\n\t},\n\t{\n\t\t\"type\": \"dropdown\",\n\t\t\"label\": \"Number Choices: \",\n\t\t\"entries\": inputData.numberChoices,\n\t\t\"key\": \"numChoices\"\n\t},\n\t{\n\t\t\"type\": \"checkboxGroup\",\n\t\t\"label\": \"Letter Choices: \",\n\t\t\"entries\": inputData.letterChoices,\n\t\t\"key\": \"letterChoices\"\n\t}\n]","validatorCode":"return true","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"isViewActive":true,"height":7000},"validator":{"isViewActive":false},"input":{"isViewActive":true,"height":7000},"inputPrivate":{"isViewActive":false},"value":{"isViewActive":true,"height":280}}}}},"numberChoices":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"letterChoices":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"layoutFromDataFormCell":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"layoutFromActionFormCell":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"fullActionFormCell":{"type":"apogeeapp.FullActionFormCell","layoutCode":"//this is the handler for pressing the submit button\nlet onSubmit = (formValue,formObject) => {\n    commandMessenger.dataCommand(\"formOutput2\",formValue)\n}\n\n//you generally don't need this. If you do, this is how you define it.\nlet onCancel = () => {\n    apogeeUserAlert(\"You canceled. In this case nothing happened.\")\n}\n\nreturn [\n\t{\n\t\t\"type\": \"heading\",\n\t\t\"text\": \"Insensitive Form\"\n\t},\n\t{\n\t\t\"type\": \"textField\",\n\t\t\"label\": \"Name: \",\n\t\t\"key\": \"name\"\n\t},\n\t{\n\t\t\"type\": \"textField\",\n\t\t\"label\": \"Salary: \",\n\t\t\"key\": \"salary\"\n\t},\n\t{\n\t\t\"type\": \"radioButtonGroup\",\n\t\t\"label\": \"Weight: \",\n\t\t\"entries\": inputData.weightOptions,\n\t\t\"key\": \"weight\"\n\t},\n\t{\n\t\t\"type\": \"submit\",\n\t\t\"onSubmit\": onSubmit, //technically optional, but you probably want one\n\t\t\"onCancel\": onCancel, //optional\n\t\t\"submitLabel\": \"OK\", //optional\n\t\t\"cancelLabel\": \"Cancel\", //optional\n\t}\n]","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"isViewActive":true,"height":7000},"input":{"isViewActive":true,"height":7000},"inputPrivate":{"isViewActive":false}}}}},"weightOptions":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"formOutput2":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}